// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.sjsu.bikelet.service;

import com.sjsu.bikelet.domain.BikeLetUser;
import com.sjsu.bikelet.service.BikeLetUserServiceImpl;
import java.util.List;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect BikeLetUserServiceImpl_Roo_Service {
    
    declare @type: BikeLetUserServiceImpl: @Service;
    
    declare @type: BikeLetUserServiceImpl: @Transactional;
    
    public long BikeLetUserServiceImpl.countAllBikeLetUsers() {
        return BikeLetUser.countBikeLetUsers();
    }
    
    public long BikeLetUserServiceImpl.countAllBikeLetUsersByProgram(Long programId) {
        return BikeLetUser.countBikeLetUsersByProgram(programId);
    }
    
    public void BikeLetUserServiceImpl.deleteBikeLetUser(BikeLetUser bikeLetUser) {
        bikeLetUser.remove();
    }
    
    public BikeLetUser BikeLetUserServiceImpl.findBikeLetUser(Long id) {
        return BikeLetUser.findBikeLetUser(id);
    }
    
    public List<BikeLetUser> BikeLetUserServiceImpl.findAllBikeLetUsers() {
        return BikeLetUser.findAllBikeLetUsers();
    }
    
    public List<BikeLetUser> BikeLetUserServiceImpl.findAllBikeLetUsersByProgram(Long programId) {
        return BikeLetUser.findAllBikeLetUsersByProgram(programId);
    }
    
    public List<BikeLetUser> BikeLetUserServiceImpl.findBikeLetUserEntries(int firstResult, int maxResults) {
        return BikeLetUser.findBikeLetUserEntries(firstResult, maxResults);
    }

    public List<BikeLetUser> BikeLetUserServiceImpl.findBikeLetUserEntriesByProgram(Long programId, int firstResult, int maxResults) {
        return BikeLetUser.findBikeLetUserEntriesByProgram(programId, firstResult, maxResults);
    }
    
    public void BikeLetUserServiceImpl.saveBikeLetUser(BikeLetUser bikeLetUser) {
        bikeLetUser.persist();
    }
    
    public BikeLetUser BikeLetUserServiceImpl.updateBikeLetUser(BikeLetUser bikeLetUser) {
        return bikeLetUser.merge();
    }
    
}
